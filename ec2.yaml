---
Parameters:
  SecurityGroupDescription:
    Description: Security Group Description
    Type: String

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: ami-0b5eea76982371e91
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref HTTPSecurityGroup
      UserData: 
        Fn::Base64: | 
          #!/bin/bash -xe
          yum update -y

          # Install Docker
          amazon-linux-extras install docker -y
          service docker start
          systemctl enable docker
          usermod -a -G docker ec2-user
          chmod 666 /var/run/docker.sock

          # Install Docker Compose
          curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose


          # Install git in your EC2 instance
          yum install git -y

          # Clone and run a sample application
          cd ~
          git clone https://github.com/CapybaraDevOps/flask-repo.git
          cd flask-repo
          docker-compose --file docker-compose.yml up
      
      
  # an elastic IP for our instance
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyInstance

  # our EC2 security group
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22

  HTTPSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable standard web access
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 5050
          ToPort: 5050
          IpProtocol: tcp

